/// Generated by terra, DO NOT MODIFY BY HAND.

import { ApiParam, CallApiReturnType, EventParam } from 'iris-web-core';

{{#nodes}}
{{#user_data.isCallback}}
export class {{name}} {
  classPrefix: string = "{{name}}_";

  _engine: IrisRtcEngine = null;

  constructor(engine: IrisRtcEngine) {
      this._engine = engine;
  }

  private eventKey(event: string): string {
      return `${this.classPrefix}${event}`;
  }

  private notifyEvent(param: EventParam): void {
      this._engine.irisEventHandlerManager.notifyEvent("RtcEngine", param);
  }

  {{#methods}}
    {{name}}({{#parameters}}{{name}}:{{type.name}},{{/parameters}}): void {
      let obj = {
        {{#parameters}}{{name}},{{/parameters}}
      };
      let json = JSON.stringify(obj);
      let key = this.eventKey('{{name}}');

      let eventParam = new EventParam(key, json, 0, '', [], [], 0);
      console.log(`{{name}} eventParam ${JSON.stringify(eventParam)}`);
      this.notifyEvent(eventParam);
    }

  {{/methods}}
}
{{/user_data.isCallback}}
{{^user_data.isCallback}}
export class {{name}}Dispatch{
    private _impl: {{name}};
    
    constructor(engine: IrisRtcEngine) {
      this._impl = new {{name}}Impl(engine);
    }
{{#methods}}
  {{name}}({{#user_data.hasParameters}}apiParam: ApiParam{{/user_data.hasParameters}}): CallApiReturnType {
    {{#user_data.hasParameters}}
    let obj = JSON.parse(apiParam.data) as any;
    {{/user_data.hasParameters}}
    {{#parameters}}
    let {{name}} = obj.{{name}};
    if ({{name}} === undefined) throw "{{name}} is undefined";
    {{/parameters}}

    return this._impl.{{name}}({{#parameters}}{{name}},{{/parameters}});
  }

{{/methods}}
}
{{/user_data.isCallback}}
{{/nodes}}
