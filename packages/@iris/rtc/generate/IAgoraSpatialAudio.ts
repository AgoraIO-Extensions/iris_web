/// Generated by terra, DO NOT MODIFY BY HAND.

import { CallApiReturnType } from 'iris-web-core';

import { RtcConnection } from './IAgoraRtcEngineEx';

export class RemoteVoicePositionInfo {
  position?: number[];

  forward?: number[];
}

export class SpatialAudioZone {
  zoneSetId?: number;

  position?: number[];

  forward?: number[];

  right?: number[];

  up?: number[];

  forwardLength?: number;

  rightLength?: number;

  upLength?: number;

  audioAttenuation?: number;
}

export interface IBaseSpatialAudioEngine {
  release(): CallApiReturnType;

  setMaxAudioRecvCount(maxCount: number): CallApiReturnType;

  setAudioRecvRange(range: number): CallApiReturnType;

  setDistanceUnit(unit: number): CallApiReturnType;

  updateSelfPosition(
    position: number[],
    axisForward: number[],
    axisRight: number[],
    axisUp: number[]
  ): CallApiReturnType;

  updateSelfPositionEx(
    position: number[],
    axisForward: number[],
    axisRight: number[],
    axisUp: number[],
    connection: RtcConnection
  ): CallApiReturnType;

  updatePlayerPositionInfo(
    playerId: number,
    positionInfo: RemoteVoicePositionInfo
  ): CallApiReturnType;

  setParameters(params: string): CallApiReturnType;

  muteLocalAudioStream(mute: boolean): CallApiReturnType;

  muteAllRemoteAudioStreams(mute: boolean): CallApiReturnType;

  setZones(zones: SpatialAudioZone, zoneCount: number): CallApiReturnType;

  setPlayerAttenuation(
    playerId: number,
    attenuation: number,
    forceSet: boolean
  ): CallApiReturnType;

  muteRemoteAudioStream(uid: number, mute: boolean): CallApiReturnType;
}

export interface ILocalSpatialAudioEngine {
  initialize(): CallApiReturnType;

  updateRemotePosition(
    uid: number,
    posInfo: RemoteVoicePositionInfo
  ): CallApiReturnType;

  updateRemotePositionEx(
    uid: number,
    posInfo: RemoteVoicePositionInfo,
    connection: RtcConnection
  ): CallApiReturnType;

  removeRemotePosition(uid: number): CallApiReturnType;

  removeRemotePositionEx(
    uid: number,
    connection: RtcConnection
  ): CallApiReturnType;

  clearRemotePositions(): CallApiReturnType;

  clearRemotePositionsEx(connection: RtcConnection): CallApiReturnType;

  setRemoteAudioAttenuation(
    uid: number,
    attenuation: number,
    forceSet: boolean
  ): CallApiReturnType;
}
