/// Generated by terra, DO NOT MODIFY BY HAND.

import {
  ERROR_CODE_TYPE,
  H265_TRANSCODE_RESULT,
  IH265Transcoder,
} from '@iris/native-rtc';
import { ApiParam, CallApiReturnType } from 'iris-web-core';

import { IrisRtcEngine } from '../engine/IrisRtcEngine';
import { AgoraConsole } from '../util/AgoraConsole';

export class IH265TranscoderObserver {
  _engine: IrisRtcEngine;

  constructor(engine: IrisRtcEngine) {
    this._engine = engine;
  }

  notifyEvent(param: ApiParam): void {
    this._engine.irisEventHandlerManager.notifyEvent('RtcEngine', param);
  }

  onEnableTranscode(result: H265_TRANSCODE_RESULT): void {
    AgoraConsole.warn(
      'H265TranscoderObserver_onEnableTranscode not supported in this platform!'
    );
    this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  onQueryChannel(
    result: H265_TRANSCODE_RESULT,
    originChannel: string,
    transcodeChannel: string
  ): void {
    AgoraConsole.warn(
      'H265TranscoderObserver_onQueryChannel not supported in this platform!'
    );
    this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  onTriggerTranscode(result: H265_TRANSCODE_RESULT): void {
    AgoraConsole.warn(
      'H265TranscoderObserver_onTriggerTranscode not supported in this platform!'
    );
    this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }
}

export class IH265TranscoderDispatch implements IH265Transcoder {
  _engine: IrisRtcEngine;

  constructor(engine: IrisRtcEngine) {
    this._engine = engine;
  }
  // @ts-ignore
  enableTranscode(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'H265Transcoder_enableTranscode not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  queryChannel(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'H265Transcoder_queryChannel not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  triggerTranscode(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'H265Transcoder_triggerTranscode not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  registerTranscoderObserver(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'H265Transcoder_registerTranscoderObserver not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  unregisterTranscoderObserver(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'H265Transcoder_unregisterTranscoderObserver not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }
}
