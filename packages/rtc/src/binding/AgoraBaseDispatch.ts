/// Generated by terra, DO NOT MODIFY BY HAND.

import { EncodedAudioFrameInfo } from '@iris/web-rtc';
import { EventParam } from 'iris-web-core';

import { IrisRtcEngine } from '../engine/IrisRtcEngine';

export class IAudioEncodedFrameObserver {
  classPrefix: string = 'IAudioEncodedFrameObserver_';

  _engine: IrisRtcEngine = null;

  constructor(engine: IrisRtcEngine) {
    this._engine = engine;
  }

  private eventKey(event: string): string {
    return `${this.classPrefix}${event}`;
  }

  private notifyEvent(param: EventParam): void {
    this._engine.irisEventHandlerManager.notifyEvent('RtcEngine', param);
  }

  onRecordAudioEncodedFrame(
    frameBuffer: number,
    length: number,
    audioEncodedFrameInfo: EncodedAudioFrameInfo
  ): void {
    let obj = {
      frameBuffer,
      length,
      audioEncodedFrameInfo,
    };
    let json = JSON.stringify(obj);
    let key = this.eventKey('onRecordAudioEncodedFrame');

    let eventParam = new EventParam(key, json, 0, '', [], [], 0);
    console.log(
      `onRecordAudioEncodedFrame eventParam ${JSON.stringify(eventParam)}`
    );
    this.notifyEvent(eventParam);
  }

  onPlaybackAudioEncodedFrame(
    frameBuffer: number,
    length: number,
    audioEncodedFrameInfo: EncodedAudioFrameInfo
  ): void {
    let obj = {
      frameBuffer,
      length,
      audioEncodedFrameInfo,
    };
    let json = JSON.stringify(obj);
    let key = this.eventKey('onPlaybackAudioEncodedFrame');

    let eventParam = new EventParam(key, json, 0, '', [], [], 0);
    console.log(
      `onPlaybackAudioEncodedFrame eventParam ${JSON.stringify(eventParam)}`
    );
    this.notifyEvent(eventParam);
  }

  onMixedAudioEncodedFrame(
    frameBuffer: number,
    length: number,
    audioEncodedFrameInfo: EncodedAudioFrameInfo
  ): void {
    let obj = {
      frameBuffer,
      length,
      audioEncodedFrameInfo,
    };
    let json = JSON.stringify(obj);
    let key = this.eventKey('onMixedAudioEncodedFrame');

    let eventParam = new EventParam(key, json, 0, '', [], [], 0);
    console.log(
      `onMixedAudioEncodedFrame eventParam ${JSON.stringify(eventParam)}`
    );
    this.notifyEvent(eventParam);
  }
}
