/// Generated by terra, DO NOT MODIFY BY HAND.

import { ERROR_CODE_TYPE, IMediaRecorder } from '@iris/native-rtc';
import { ApiParam, CallApiReturnType } from 'iris-web-core';

import { IrisRtcEngine } from '../engine/IrisRtcEngine';
import { AgoraConsole } from '../util/AgoraConsole';

export class IMediaRecorderDispatch implements IMediaRecorder {
  _engine: IrisRtcEngine;

  constructor(engine: IrisRtcEngine) {
    this._engine = engine;
  }
  // @ts-ignore
  setMediaRecorderObserver(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaRecorder_setMediaRecorderObserver not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  startRecording(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaRecorder_startRecording not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  stopRecording(): CallApiReturnType {
    AgoraConsole.warn('MediaRecorder not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }
}
