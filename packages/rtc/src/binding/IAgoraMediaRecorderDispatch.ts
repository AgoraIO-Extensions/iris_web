/// Generated by terra, DO NOT MODIFY BY HAND.

import { ApiParam, CallApiReturnType } from 'iris-web-core';
import { IMediaRecorder, MediaRecorderImpl } from 'iris-web-rtc';

import { IrisRtcEngine } from '../engine/IrisRtcEngine';

export class IMediaRecorderDispatch {
  private _impl: IMediaRecorder;

  constructor(engine: IrisRtcEngine) {
    this._impl = new MediaRecorderImpl(engine);
  }
  setMediaRecorderObserver(apiParam: ApiParam): CallApiReturnType {
    let obj = JSON.parse(apiParam.data) as any;
    let callback = obj.callback;
    if (callback === undefined) throw 'callback is undefined';

    return this._impl.setMediaRecorderObserver(callback);
  }

  startRecording(apiParam: ApiParam): CallApiReturnType {
    let obj = JSON.parse(apiParam.data) as any;
    let config = obj.config;
    if (config === undefined) throw 'config is undefined';

    return this._impl.startRecording(config);
  }

  stopRecording(): CallApiReturnType {
    return this._impl.stopRecording();
  }
}
