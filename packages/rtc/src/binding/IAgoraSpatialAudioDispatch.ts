/// Generated by terra, DO NOT MODIFY BY HAND.

import { ERROR_CODE_TYPE } from '@iris/native-rtc-binding';
import { ApiParam, CallApiReturnType } from 'iris-web-core';

import { IrisRtcEngine } from '../engine/IrisRtcEngine';
import {
  IBaseSpatialAudioEngineImpl,
  ILocalSpatialAudioEngineImpl,
} from '../impl/IAgoraSpatialAudioImpl';
import { AgoraConsole } from '../util/AgoraConsole';

export class IBaseSpatialAudioEngineDispatch {
  _impl: IBaseSpatialAudioEngineImpl;
  _engine: IrisRtcEngine = null;

  constructor(engine: IrisRtcEngine) {
    this._impl = new IBaseSpatialAudioEngineImpl(engine);
    this._engine = engine;
  }
  release(): CallApiReturnType {
    AgoraConsole.warn('release not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  setMaxAudioRecvCount(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('setMaxAudioRecvCount not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  setAudioRecvRange(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('setAudioRecvRange not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  setDistanceUnit(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('setDistanceUnit not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  updateSelfPosition(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('updateSelfPosition not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  updateSelfPositionEx(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('updateSelfPositionEx not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  updatePlayerPositionInfo(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'updatePlayerPositionInfo not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  setParameters(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('setParameters not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  muteLocalAudioStream(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('muteLocalAudioStream not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  muteAllRemoteAudioStreams(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'muteAllRemoteAudioStreams not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  setZones(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('setZones not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  setPlayerAttenuation(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('setPlayerAttenuation not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  muteRemoteAudioStream(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('muteRemoteAudioStream not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }
}

export class ILocalSpatialAudioEngineDispatch {
  _impl: ILocalSpatialAudioEngineImpl;
  _engine: IrisRtcEngine = null;

  constructor(engine: IrisRtcEngine) {
    this._impl = new ILocalSpatialAudioEngineImpl(engine);
    this._engine = engine;
  }
  initialize(): CallApiReturnType {
    AgoraConsole.warn('initialize not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  updateRemotePosition(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('updateRemotePosition not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  updateRemotePositionEx(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('updateRemotePositionEx not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  removeRemotePosition(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('removeRemotePosition not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  removeRemotePositionEx(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('removeRemotePositionEx not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  clearRemotePositions(): CallApiReturnType {
    AgoraConsole.warn('clearRemotePositions not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  clearRemotePositionsEx(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn('clearRemotePositionsEx not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  setRemoteAudioAttenuation(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'setRemoteAudioAttenuation not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }
}
