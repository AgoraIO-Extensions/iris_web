/// Generated by terra, DO NOT MODIFY BY HAND.

import { ERROR_CODE_TYPE, IMediaEngine } from '@iris/native-rtc';
import { ApiParam, CallApiReturnType } from 'iris-web-core';

import { IrisRtcEngine } from '../engine/IrisRtcEngine';
import { IMediaEngineImpl } from '../impl/IAgoraMediaEngineImpl';
import { AgoraConsole } from '../util/AgoraConsole';

export class IMediaEngineDispatch implements IMediaEngine {
  // @ts-ignore
  _impl: IMediaEngineImpl;
  _engine: IrisRtcEngine;

  constructor(engine: IrisRtcEngine) {
    this._impl = new IMediaEngineImpl(engine);
    this._engine = engine;
  }
  // @ts-ignore
  registerAudioFrameObserver(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_registerAudioFrameObserver not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  registerVideoFrameObserver(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_registerVideoFrameObserver not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  registerVideoEncodedFrameObserver(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_registerVideoEncodedFrameObserver not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  pushAudioFrame(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_pushAudioFrame not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  pullAudioFrame(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_pullAudioFrame not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  setExternalVideoSource(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_setExternalVideoSource not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  setExternalAudioSource(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_setExternalAudioSource not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  createCustomAudioTrack(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_createCustomAudioTrack not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  destroyCustomAudioTrack(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_destroyCustomAudioTrack not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  setExternalAudioSink(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_setExternalAudioSink not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  enableCustomAudioLocalPlayback(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_enableCustomAudioLocalPlayback not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  pushVideoFrame(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_pushVideoFrame not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  pushEncodedVideoImage(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_pushEncodedVideoImage not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  addVideoFrameRenderer(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_addVideoFrameRenderer not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  removeVideoFrameRenderer(apiParam: ApiParam): CallApiReturnType {
    AgoraConsole.warn(
      'MediaEngine_removeVideoFrameRenderer not supported in this platform!'
    );
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }

  // @ts-ignore
  release(): CallApiReturnType {
    AgoraConsole.warn('MediaEngine not supported in this platform!');
    return this._engine.returnResult(false, -ERROR_CODE_TYPE.ERR_NOT_SUPPORTED);
  }
}
